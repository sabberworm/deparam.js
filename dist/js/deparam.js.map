{"version":3,"file":"deparam.js","sources":["../../src/deparam.js"],"sourcesContent":["/**!\n * deparam.js\n * Deparam deparameterizes query string to a valid JavaScript object\n * @project      Deparam plugin\n * @date         2019-05-12\n * @author       Sachin Singh <ssingh.300889@gmail.com>\n * @version      2.0.0\n */\n\n// Vars\nconst isBrowser = typeof window !== \"undefined\";\n\n// Shorthand for built-ins\nconst isArr = Array.isArray;\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nfunction isNumber(key) {\n    key = (key + \"\").trim();\n    if (['null', 'undefined', ''].indexOf(key) > -1) return false;\n    return !isNaN(Number(key));\n}\n\n/**\n * Checks if key is a true object\n * @param {*} key Any type of value\n */\nfunction isObject(key) {\n    return (key != null && !isArr(key) && key.toString() === \"[object Object]\");\n}\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction ifComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs = (\n    (isBrowser\n        ? window.location.search\n        : \"\")\n), coerce = true) {\n    qs = qs.trim();\n    if (qs.charAt(0) === \"?\") {\n        qs = qs.replace(\"?\", \"\");\n    }\n    const queryParamList = qs.split(\"&\");\n    const queryObject = {};\n    if (qs) {\n        queryParamList.forEach((qq) => {\n            const qArr = qq.split(\"=\");\n            if (qArr[1]) {\n                qArr[1] = decodeURIComponent(qArr[1]);\n            }\n            if (ifComplex(...qArr)) {\n                complex(...qArr, queryObject, coerce);\n            } else {\n                simple(qArr, queryObject, false, coerce);\n            }\n        });\n    }\n    return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction toObject(arr) {\n    var convertedObj = {};\n    if (isArr(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n    }\n    return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n    if (typeof ob === \"undefined\") return isNextNumber ? [] : {};\n    return isNextNumber ? ob : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n    if (isObject(ob)) return { ob };\n    if (isArr(ob) || typeof ob === \"undefined\") return { ob: resolve(ob, isNumber(nextProp)) };\n    return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction complex(key, value, obj, doCoerce = true) {\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/) || [];\n    if (match.length === 3) {\n        let [, prop, nextProp] = match;\n        key = key.replace(/\\[([^\\[]*)\\]/, \"\");\n        if (ifComplex(key)) {\n            if (nextProp === \"\") nextProp = \"0\";\n            key = key.replace(/[^\\[]+/, nextProp);\n            complex(key, value, (obj[prop] = resolveObj(obj[prop], nextProp).ob), doCoerce);\n        } else if (nextProp) {\n            const { ob, push } = resolveObj(obj[prop], nextProp);\n            obj[prop] = ob;\n            if (push) {\n                obj[prop].push({\n                    [nextProp]: (doCoerce ? coerce(value) : value)\n                });\n            } else {\n                obj[prop][nextProp] = (doCoerce ? coerce(value) : value);\n            }\n        } else {\n            simple([match[1], value], obj, true);\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} toArray \n */\nfunction simple(qArr, queryObject, toArray, doCoerce = true) {\n    let [key, value] = qArr;\n    // Convert to appropriate type\n    if (doCoerce) {\n        value = coerce(value);\n    }\n    if (key in queryObject) {\n        queryObject[key] = isArr(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = toArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n    if (value == null) return \"\";\n    if (typeof value !== \"string\") return value;\n    value = value.trim();\n    if (isNumber(value)) return +value;\n    switch (value) {\n        case \"null\": return null;\n        case \"undefined\": return undefined;\n        case \"true\": return true;\n        case \"false\": return false;\n        case \"NaN\": return NaN;\n        default: return value;\n    }\n}\n\n// Library encapsulation\nfunction lib() {\n    return deparam.apply(this, arguments);\n}\n\nexport default lib;"],"names":["isBrowser","window","isArr","Array","isArray","isNumber","key","trim","indexOf","isNaN","Number","isObject","toString","ifComplex","q","test","deparam","qs","location","search","coerce","charAt","replace","queryParamList","split","queryObject","forEach","qq","qArr","decodeURIComponent","complex","simple","toObject","arr","convertedObj","value","index","resolve","ob","isNextNumber","resolveObj","nextProp","push","obj","doCoerce","match","length","prop","toArray","undefined","NaN","lib","apply","arguments"],"mappings":"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"}